{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Nav.svelte",
    "../../Stories.svelte",
    "../../Story.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { projectArray } from \"../stores.js\";\n  import { push } from \"svelte-spa-router\";\n\n  export let projectIndex = 0; //prop so that you can pass which project from App\n\n  export let navOpen = false;\n\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  function showNav(openOrNot) {\n    dispatch(\"message\", {\n      open: openOrNot\n    });\n  }\n</script>\n\n<style>\n  nav {\n    border: 1px solid black;\n    position: absolute;\n    padding: 0;\n    margin: 0;\n    min-height: 38px;\n    top: 8px;\n    left: 8px;\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0px 2px 8px -2px rgba(0, 0, 0, 0.5);\n    -webkit-box-shadow: 0px 2px 8px -2px rgba(0, 0, 0, 0.5);\n    -moz-box-shadow: 0px 2px 8px -2px rgba(0, 0, 0, 0.5);\n    z-index: 9999;\n  }\n  .navItem {\n    margin: 4px;\n    padding: 4px;\n    overflow: hidden;\n    border-radius: 5px;\n    transition: all 0.5s ease;\n    font-size: 16px;\n  }\n  .navItem:hover {\n    cursor: pointer;\n    color: rgb(154, 24, 160);\n    /* background-color: rgb(225, 206, 224); */\n    transition: all 0.4s ease;\n  }\n  ol {\n    padding: 0;\n    margin: 0;\n  }\n  /* .activeNavItem {\n    color: red;\n  } */\n  .hidden {\n    height: 0px;\n    margin-top: 0px;\n    margin-bottom: 0px;\n    padding-top: 0px;\n    padding-bottom: 0px;\n    color: white;\n    transition: all 0.5s ease;\n  }\n</style>\n\n<svelte:options immutable={true} />\n<nav\n  on:mouseover={() => {\n    if (window.innerWidth > 640) {\n      showNav(true);\n    }\n  }}\n  on:mouseleave={() => {\n    if (window.innerWidth > 640) {\n      showNav(false);\n    }\n  }}>\n  <ol>\n\n    {#each projectArray as project, i}\n      <li\n        class=\" navItem {projectIndex == i ? 'activeNavItem' : 'inactiveNavItem'}\n        {navOpen ? 'visible' : projectIndex !== i ? 'hidden' : 'visible'}\n        \"\n        on:click={() => {\n          if (window.innerWidth < 640) {\n            if (navOpen) push('/' + i + '/0');\n            projectIndex == i ? showNav(!navOpen) : showNav(false);\n          } else {\n            push('/' + i + '/0');\n          }\n        }}>\n        {project.name}\n      </li>\n    {/each}\n\n  </ol>\n\n</nav>\n",
    "<script>\n  import Story from \"./Story.svelte\";\n  import { onMount } from \"svelte\";\n  import Nav from \"./Nav.svelte\";\n  import { projectArray, getNext, getPrev } from \"../stores.js\";\n  import { gestures } from \"@composi/gestures\";\n  import { push } from \"svelte-spa-router\";\n\n  gestures(); //figure this shit out at some point lol\n\n  export let params = { project: 0, story: 0 };\n  $: next = getNext(params);\n  $: prev = getPrev(params);\n\n  // let touch = false;//whether the gestures\n  let gesture_start = { pageX: 0, pageY: 0 };\n  let gesture_active = { pageX: 0, pageY: 0 };\n  let gesture_gap = { pageX: 0, pageY: 0 }; //why can't i make this a reactive svelte thingy\n\n  let held = false;\n  let swipeDirection = \"right\";\n  let swipeSensitivity = Math.min(screen.width / 3, 300);\n  window.onresize = () => {\n    swipeSensitivity = Math.min(screen.width / 3, 300);\n  };\n\n  let timedout = true; //whether a gesture has timed out\n  let gesturetimer; //timer object to time that\n\n  let navOpen = false;\n  function handleNav(event) {\n    navOpen = event.detail.open;\n  }\n\n  function handleProjects(direction) {\n    if (direction == \"next\") {\n      push(\"/\" + next.project + \"/\" + next.story);\n    } else {\n      push(\"/\" + prev.project + \"/\" + prev.story);\n    }\n  }\n\n  function gestureDown(e) {\n    //when a gesture starts\n    navOpen = false;\n    if (e.type == \"touchstart\") {\n      //if it'a a touch event\n      gesture_start.pageX = Math.round(e.changedTouches[0].pageX); //where the event starts\n      gesture_start.pageY = Math.round(e.changedTouches[0].pageY);\n    } else {\n      //if it's a mouse\n      gesture_start.pageX = e.pageX;\n      gesture_start.pageY = e.pageY;\n    }\n    gesture_active.pageX = gesture_start.pageX;\n    gesture_active.pageY = gesture_start.pageY;\n    held = true; //start holding gesture\n    timedout = false; //reset timedout, hasn't timed out yet\n    gesturetimer = setTimeout(() => {\n      //start timer\n      timedout = true;\n    }, 400);\n  }\n\n  function gestureMove(e) {\n    //when ya movin\n    if (e.type == \"touchmove\") {\n      //if it'a a touch event\n      gesture_active.pageX = Math.round(e.changedTouches[0].pageX);\n      gesture_active.pageY = Math.round(e.changedTouches[0].pageY);\n    } else {\n      //if it's a mouse\n      gesture_active.pageX = e.pageX;\n      gesture_active.pageY = e.pageY;\n    }\n\n    gesture_gap = {\n      //set the gap between start and where you've dragged\n      pageX: gesture_active.pageX - gesture_start.pageX,\n      pageY: gesture_active.pageY - gesture_start.pageY\n    };\n    gesture_gap.pageX > 0\n      ? (swipeDirection = \"left\")\n      : (swipeDirection = \"right\");\n  }\n\n  function gestureUp(e, direction) {\n    held = false; //end holding gesture\n    if (!timedout) {\n      //if the gesture hasn't timed out\n      if (gesture_active.pageX > gesture_start.pageX + swipeSensitivity) {\n        //LEFT SWIPEY\n        // swipeDirection = \"left\";\n\n        parseInt(params.project) > 0 // if current project ain't first\n          ? push(\"/\" + (parseInt(params.project) - 1) + \"/0\") //next project\n          : push(\"/\" + (projectArray.length - 1) + \"/0\"); //last project\n      } else if (\n        gesture_active.pageX <\n        gesture_start.pageX - swipeSensitivity\n      ) {\n        //RIGHT SWIPEY\n        // swipeDirection = \"right\";\n        parseInt(params.project) <= projectArray.length // if current project ain't last\n          ? push(\"/\" + (parseInt(params.project) + 1) + \"/0\") //next project\n          : push(\"/0/0\"); //first project\n      } else {\n        //JUST GO NEXT OR PREV\n        handleProjects(direction);\n      }\n    }\n    //reset timer\n    clearTimeout(gesturetimer);\n    //reset gesture tracking\n    gesture_start = { pageX: 0, pageY: 0 };\n    gesture_active = { pageX: 0, pageY: 0 };\n    gesture_gap = { pageX: 0, pageY: 0 };\n  }\n  function handleKeydown(event) {\n    if (event.keyCode == 39) {\n      handleProjects(\"next\");\n    } else if (event.keyCode == 37) {\n      handleProjects(\"prev\");\n    }\n  }\n</script>\n\n<style>\n  main {\n    justify-content: center;\n    display: flex;\n  }\n  button {\n    position: absolute;\n    top: -20px;\n    bottom: -20px;\n    /* height: 100%; */\n    z-index: 2;\n    opacity: 0.3;\n    width: 50vw;\n    /* outline: none; */\n  }\n  #nextButton {\n    background-color: rgb(255, 139, 212);\n    right: calc(-50vw + 50%);\n\n    cursor: e-resize;\n  }\n  #prevButton {\n    background-color: rgb(139, 255, 211);\n    left: calc(-50vw + 50%);\n    cursor: w-resize;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n<svelte:options immutable={true} />\n\n<Nav projectIndex={parseInt(params.project)} {navOpen} on:message={handleNav} />\n<div\n  style=\" width: 100vw; height: 100vh; display: flex; justify-content: center;\n  align-items: center; perspective: 360px;\">\n  <main\n    style=\"position: relative; left: {held ? gesture_gap.pageX / 1.2 : 0}px;\n    transition: left {held ? 0 : 0.2}s ease;\">\n    <!-- overflow: hidden; -->\n\n    <button\n      id=\"prevButton\"\n      on:touchstart|preventDefault={e => gestureDown(e)}\n      on:mousedown|preventDefault={e => gestureDown(e)}\n      on:touchmove|preventDefault={e => {\n        if (held) gestureMove(e);\n      }}\n      on:mousemove|preventDefault={e => {\n        if (held) gestureMove(e);\n      }}\n      on:touchend|preventDefault={e => gestureUp(e, 'prev')}\n      on:mouseup={e => gestureUp(e, 'prev')} />\n    <button\n      id=\"nextButton\"\n      on:touchstart|preventDefault={e => gestureDown(e)}\n      on:mousedown|preventDefault={e => gestureDown(e)}\n      on:touchmove|preventDefault={e => {\n        if (held) gestureMove(e);\n      }}\n      on:mousemove|preventDefault={e => {\n        if (held) gestureMove(e);\n      }}\n      on:touchend|preventDefault={e => gestureUp(e, 'next')}\n      on:mouseup={e => gestureUp(e, 'next')} />\n    <div\n      style=\"backface-visibility: hidden;transform: {held ? 'rotateY(' + Math.max(Math.min(gesture_gap.pageX / 10, 45), -45) + 'deg)' : 'none'};\n      transform-origin: center {swipeDirection == 'right' ? 'right' : 'left'};\n      transition: transform {held ? 0 : 0.2}s ease;\">\n      <!--       transform-style: preserve-3d; \n       -->\n      {#each projectArray as { name, stories }, i}\n        {#each stories as story, j}\n          {#if params.project == i && params.story == j}\n            <Story storyContent={story} current={true} />\n          {:else if next.project == i && next.story == j}\n            <Story storyContent={story} next={true} />\n          {:else if prev.project == i && prev.story == j}\n            <Story storyContent={story} prev={true} />\n          {:else}\n            <Story storyContent={story} />\n          {/if}\n        {/each}\n      {/each}\n    </div>\n  </main>\n</div>\n",
    "<script>\n  // import { beforeUpdate } from \"svelte\";\n  import Content from \"./Content.svelte\";\n\n  // export const projectIndex = 0; //prop so that you can pass which project from App\n  // export const storyIndex = 0; //prop so that you can pass which project from App\n  export let storyContent = \"<section>loadingâ€¦</section\"; //prop so that you can pass which project from App\n  export let current = false;\n  export let next = false;\n  export let prev = false;\n\n  let displayPosition = \"none\";\n  let showStoryContent = false;\n\n  // beforeUpdate(() => {\n  if (next) {\n    displayPosition = \"plus1\";\n    showStoryContent = true;\n  } else if (current) {\n    displayPosition = \"currentProject\";\n    showStoryContent = true;\n  } else if (prev) {\n    displayPosition = \"minus1\";\n    showStoryContent = true;\n  } else {\n    displayPosition = \"none\";\n  }\n  // });\n</script>\n\n<style>\n  :root {\n    /* this is like css variables */\n    --width-border: 460px;\n    /* --height-border: 840px; */\n  }\n  .story {\n    width: 100vw;\n    height: calc(100vh - 30px);\n    max-width: var(--width-border);\n    max-height: var(--height-border);\n    padding: 0;\n    margin: 10px;\n    position: relative;\n    overflow: hidden;\n    border-radius: 8px;\n    transition: 0.3s max-height ease, 0.3s max-width ease, 0.3s height ease,\n      0.3s width ease, 0.3s border-radius ease;\n  }\n  @media screen and (max-width: 550px) {\n    .story {\n      border-radius: 0px;\n      margin: 0;\n      height: 100vh;\n      max-height: 100vh;\n      max-width: 100vw;\n    }\n    .currentProject {\n      top: 0;\n      transform: none;\n      left: 0;\n      right: 0;\n      bottom: 0;\n    }\n  }\n\n  .none {\n    display: none;\n  }\n\n  .minus1 {\n    display: none;\n  }\n  .currentProject {\n    /* box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); */\n    margin: 0;\n  }\n  .plus1 {\n    display: none;\n  }\n</style>\n\n<div class=\"story {displayPosition} \">\n  {#if showStoryContent}\n    <Content {storyContent} />\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}